Token 	 Lexeme
Token: Separator	Lexeme: $$
Token: Keyword  	Lexeme: integer
Token: Identifier	Lexeme: i
Token: Separator	Lexeme: ;
Token: Keyword  	Lexeme: boolean
Token: Identifier	Lexeme: y
Token: Separator	Lexeme: ;
Token: Keyword  	Lexeme: get
Token: Separator	Lexeme: (
Token: Identifier	Lexeme: max
Token: Separator	Lexeme: )
Token: Separator	Lexeme: ;
Token: Keyword  	Lexeme: while
Token: Separator	Lexeme: (
Token: Identifier	Lexeme: i
Token: Operator  	Lexeme: <
Token: Identifier	Lexeme: max
Token: Separator	Lexeme: )
Token: Separator	Lexeme: {
Token: Identifier	Lexeme: sum
Token: Operator  	Lexeme: =
Token: Identifier	Lexeme: sum
Token: Operator  	Lexeme: +
Token: Identifier	Lexeme: i
Token: Separator	Lexeme: ;
Token: Identifier	Lexeme: i
Token: Operator  	Lexeme: =
Token: Identifier	Lexeme: i
Token: Operator  	Lexeme: +
Token: Integer	Lexeme: 1
Token: Separator	Lexeme: ;
Token: Separator	Lexeme: }
Token: Keyword  	Lexeme: put
Token: Separator	Lexeme: (
Token: Identifier	Lexeme: sum
Token: Separator	Lexeme: )
Token: Separator	Lexeme: ;
Token: Keyword  	Lexeme: if
Token: Separator	Lexeme: (
Token: Identifier	Lexeme: x
Token: Operator  	Lexeme: >
Token: Identifier	Lexeme: y
Token: Separator	Lexeme: )
Token: Identifier	Lexeme: x
Token: Operator  	Lexeme: =
Token: Identifier	Lexeme: false
Token: Separator	Lexeme: ;
Token: Keyword  	Lexeme: fi
Token: Keyword  	Lexeme: if
Token: Separator	Lexeme: (
Token: Identifier	Lexeme: y
Token: Operator  	Lexeme: ==
Token: Identifier	Lexeme: z
Token: Separator	Lexeme: )
Token: Identifier	Lexeme: x
Token: Operator  	Lexeme: =
Token: Identifier	Lexeme: true
Token: Separator	Lexeme: ;
Token: Keyword  	Lexeme: otherwise
Token: Identifier	Lexeme: y
Token: Operator  	Lexeme: =
Token: Integer	Lexeme: 123
Token: Separator	Lexeme: ;
Token: Keyword  	Lexeme: fi
Token: Identifier	Lexeme: sum
Token: Operator  	Lexeme: =
Token: Identifier	Lexeme: sum
Token: Operator  	Lexeme: +
Token: Identifier	Lexeme: max
Token: Operator  	Lexeme: -
Token: Identifier	Lexeme: ys
Token: Operator  	Lexeme: /
Token: Identifier	Lexeme: x
Token: Operator  	Lexeme: *
Token: Identifier	Lexeme: z
Token: Separator	Lexeme: ;
Token: Separator	Lexeme: $$
